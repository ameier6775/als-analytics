import Excel from 'exceljs';
import { groupBy, keyBy, omit, pick } from 'lodash';
import path from 'path';
import excuteQuery from '../../../../lib/db';

export default async function handler(req, res) {
  if (req.method === 'POST') {
    const result = await excuteQuery({
      query: 'SELECT * FROM NHL_2021.players_moneypuck WHERE name = "' + req.body.name + '";',
      values: [req.body.name],
    });
    console.log('posting data');
    res.status(200).send(result);
  } else if (req.method === 'GET') {
    const result = await excuteQuery({
      query:
        "SELECT name AS value, name AS label, name, position, team, I_F_goals AS goals, RANK() OVER (ORDER BY I_F_goals DESC) goalsRank, ROUND((I_F_goals - (SELECT MIN(I_F_goals) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(I_F_goals) - MIN(I_F_goals) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS goalsRate, I_F_assists AS assists, RANK() OVER (ORDER BY I_F_assists DESC) assistsRank, ROUND((I_F_assists - (SELECT MIN(I_F_assists) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(I_F_assists) - MIN(I_F_assists) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS assistsRate, I_F_points AS points, RANK() OVER (ORDER BY I_F_points DESC) pointsRank, ROUND((I_F_points - (SELECT MIN(I_F_points) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(I_F_points) - MIN(I_F_points) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS pointsRate, I_F_xGoals AS expectedGoals, RANK() OVER (ORDER BY I_F_xGoals DESC) xGoalsRank, ROUND((I_F_xGoals - (SELECT MIN(I_F_xGoals) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(I_F_xGoals) - MIN(I_F_xGoals) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS xGoalsRate, OnIce_F_goals AS onIceGoals, RANK() OVER (ORDER BY OnIce_F_goals DESC) onIceGoalsForRank, ROUND((OnIce_F_goals - (SELECT MIN(OnIce_F_goals) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(OnIce_F_goals) - MIN(OnIce_F_goals) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS onIceGoalsForRate, I_F_goals / icetime AS goalsPer60, RANK() OVER (ORDER BY I_F_goals / icetime DESC) goalsPer60Rank, ROUND((I_F_goals / icetime - (SELECT MIN(I_F_goals / icetime) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(I_F_goals / icetime) - MIN(I_F_goals / icetime) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS goalsPer60Rate, I_F_assists / icetime AS assistsPer60, RANK() OVER (ORDER BY I_F_assists / icetime DESC) assistsPer60Rank, ROUND((I_F_assists / icetime - (SELECT MIN(I_F_assists / icetime) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(I_F_assists / icetime) - MIN(I_F_assists / icetime) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS assistsPer60Rate, I_F_points / icetime AS pointsPer60, RANK() OVER (ORDER BY I_F_points / icetime DESC) pointsPer60Rank, ROUND((I_F_points / icetime - (SELECT MIN(I_F_points / icetime) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(I_F_points / icetime) - MIN(I_F_points / icetime) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS pointsPer60Rate, I_F_shotAttempts AS shotAttempts, RANK() OVER (ORDER BY I_F_shotAttempts DESC) shotAttemptsRank, ROUND((I_F_shotAttempts - (SELECT MIN(I_F_shotAttempts) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(I_F_shotAttempts) - MIN(I_F_shotAttempts) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS shotAttemptsRate, ROUND(I_F_oZoneShiftStarts / (I_F_oZoneShiftStarts + I_F_dZoneShiftStarts + I_F_neutralZoneShiftStarts), 2) AS oZoneStartRate, RANK() OVER (ORDER BY ROUND(I_F_oZoneShiftStarts / (I_F_oZoneShiftStarts + I_F_dZoneShiftStarts + I_F_neutralZoneShiftStarts), 2) DESC) oZoneStartRank, I_F_takeaways AS takeaways, RANK() OVER (ORDER BY I_F_takeaways DESC) takeawaysRank, ROUND((I_F_takeaways - (SELECT MIN(I_F_takeaways) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(I_F_takeaways) - MIN(I_F_takeaways) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS takeawaysRate, I_F_hits AS hits, RANK() OVER (ORDER BY I_F_hits DESC) hitsRank, ROUND((I_F_hits - (SELECT MIN(I_F_hits) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(I_F_hits) - MIN(I_F_hits) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS hitsRate, shotsBlockedByPlayer AS blocks, RANK() OVER (ORDER BY shotsBlockedByPlayer DESC) blocksRank, ROUND((shotsBlockedByPlayer - (SELECT MIN(shotsBlockedByPlayer) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(shotsBlockedByPlayer) - MIN(shotsBlockedByPlayer) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS blocksRate, I_F_blockedShotAttempts AS breakups, RANK() OVER (ORDER BY I_F_blockedShotAttempts DESC) breakupsRank, ROUND((I_F_blockedShotAttempts - (SELECT MIN(I_F_blockedShotAttempts) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(I_F_blockedShotAttempts) - MIN(I_F_blockedShotAttempts) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS breakupsRate, I_F_giveaways AS giveaways, RANK() OVER (ORDER BY I_F_giveaways) giveawaysRank, ROUND(1 - (I_F_giveaways - (SELECT MIN(I_F_giveaways) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(I_F_giveaways) - MIN(I_F_giveaways) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS giveawaysRate, OnIce_A_xGoals AS xGoalsAgainst, RANK() OVER (ORDER BY OnIce_A_xGoals) xGoalsAgainstRank, ROUND(1 - (OnIce_A_xGoals - (SELECT MIN(OnIce_A_xGoals) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(OnIce_A_xGoals) - MIN(OnIce_A_xGoals) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS xGoalsAgainstRate, OnIce_A_goals AS onIceGoalsAgainst, RANK() OVER (ORDER BY OnIce_A_goals) onIceGoalsAgainstRank, ROUND(1 - (OnIce_A_goals - (SELECT MIN(OnIce_A_goals) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(OnIce_A_goals) - MIN(OnIce_A_goals) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS onIceGoalsAgainstRate, I_F_dZoneGiveaways AS dZoneGiveaways, RANK() OVER (ORDER BY I_F_dZoneGiveaways) dZoneGiveawaysRank, ROUND(1 - (I_F_dZoneGiveaways - (SELECT MIN(I_F_dZoneGiveaways) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(I_F_dZoneGiveaways) - MIN(I_F_dZoneGiveaways) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS dZoneGiveawaysRate, OnIce_A_shotAttempts AS shotAttemptsAgainst, RANK() OVER (ORDER BY OnIce_A_shotAttempts) shotAttemptsAgainstRank, ROUND(1 - (OnIce_A_shotAttempts - (SELECT MIN(OnIce_A_shotAttempts) FROM NHL_2021.players_moneypuck WHERE situation = 'all')) / (SELECT MAX(OnIce_A_shotAttempts) - MIN(OnIce_A_shotAttempts) FROM NHL_2021.players_moneypuck WHERE situation = 'all'), 2) AS shotAttemptsAgainstRate, ROUND(I_F_dZoneShiftStarts / (I_F_oZoneShiftStarts + I_F_dZoneShiftStarts + I_F_neutralZoneShiftStarts), 2) AS dZoneStartRate, RANK() OVER (ORDER BY ROUND(I_F_dZoneShiftStarts / (I_F_oZoneShiftStarts + I_F_dZoneShiftStarts + I_F_neutralZoneShiftStarts), 2) DESC) dZoneStartRank FROM NHL_2021.players_moneypuck WHERE situation = 'all' ORDER BY name;",
      values: [req.body.content],
    });
    res.json(result);
    console.log('getting data');
  }
}
